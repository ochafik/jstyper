{
  "name": "jstyper",
  "version": "0.1.11",
  "author": {
    "name": "Olivier Chafik",
    "email": "olivier.chafik@gmail.com",
    "url": "http://ochafik.com"
  },
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/ochafik/jstyper/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ochafik/jstyper.git"
  },
  "categories": [
    "Linters",
    "Formatters",
    "Languages"
  ],
  "keywords": [
    "typescript",
    "flow",
    "closure",
    "types",
    "migration"
  ],
  "devDependencies": {
    "@types/chai": "^3.4.34",
    "@types/minimist": "^1.2.0",
    "@types/mocha": "^2.2.39",
    "@types/node": "^7.0.4",
    "babel-plugin-external-helpers": "^6.22.0",
    "babel-preset-es2015": "^6.22.0",
    "chai": "^3.5.0",
    "clang-format": "^1.0.46",
    "concurrently": "^3.1.0",
    "inline-assets": "^1.1.2",
    "lite-server": "^2.2.2",
    "mocha": "^3.2.0",
    "rollup": "^0.41.4",
    "rollup-plugin-babel": "^2.7.1",
    "rollup-plugin-commonjs": "^7.0.0",
    "rollup-plugin-filesize": "^1.0.1",
    "rollup-plugin-node-resolve": "^2.0.0",
    "rollup-plugin-replace": "^1.1.1",
    "rollup-plugin-typescript": "^0.8.1",
    "rollup-plugin-uglify": "^1.0.1",
    "rollup-watch": "^3.2.2",
    "typescript": "^2.1.5",
    "uglify-js-harmony": "^2.6.2",
    "watch": "^1.0.1"
  },
  "dependencies": {
    "minimist": "^1.2.0"
  },
  "scripts": {
    "build": "rm -fR build && npm run rollup:demo && npm run rollup:cli && inline-assets index.html build/demo.html",
    "demo": "concurrently --kill-others \"DEV=1 npm run rollup:demo -- -w\" lite-server",
    "start": "concurrently --kill-others \"npm run demo\" \"npm run test:w\"",
    "rollup:demo": "rollup -c rollup.config.demo.js",
    "rollup:cli": "rollup -c rollup.config.cli.js",
    "test": "tsc && mocha build/test",
    "test:w": "tsc && concurrently \"tsc -w\" \"mocha build/test --watch\"",
    "update-specs": "UPDATE_SPECS=1 npm test",
    "update-specs:w": "UPDATE_SPECS=1 npm test:w",
    "format": "clang-format --glob=src/**/*.ts -i -style=Google",
    "prepare-release": "npm test && npm run build",
    "postpublish": "git push --follow-tags && ./deploy.sh",
    "major-release": "npm run prepare-release && npm version major && npm publish && npm run postpublish",
    "minor-release": "npm run prepare-release && npm version minor && npm publish && npm run postpublish",
    "patch-release": "npm run prepare-release && npm version patch && npm publish && npm run postpublish"
  },
  "bin": {
    "jstyper": "bin/jstyper.js"
  },
  "files": [
    "bin/jstyper.js",
    "build/cli.js",
    "build/demo.html",
    "build/demo.js.map"
  ]
}
